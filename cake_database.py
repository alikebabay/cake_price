import sqlite3
from datetime import datetime
import os
from config import DB_PATH

TS_FMT = "%Y-%m-%d %H:%M:%S"

#–ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–∞
def _ensure_schema(cur):
    cur.execute("""
    CREATE TABLE IF NOT EXISTS exchange_rates (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        title TEXT NOT NULL UNIQUE,
        rate  FLOAT NOT NULL,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
    )""")
    cur.execute("CREATE UNIQUE INDEX IF NOT EXISTS ux_exchange_rates_title ON exchange_rates(title)")

def is_rate_cached(title: str) -> bool:
    title = str(title).strip().upper()
    con = sqlite3.connect(DB_PATH)
    cur = con.cursor()
    _ensure_schema(cur)  # ‚Üê –î–û–ë–ê–í–¨
    cur.execute("SELECT 1 FROM exchange_rates WHERE title = ? LIMIT 1", (title,))
    ok = cur.fetchone() is not None
    con.close()
    return ok

def cache_rate(title: str, rate: float):
    title = str(title).strip().upper()
    con = sqlite3.connect(DB_PATH)
    cur = con.cursor()

    cur.execute("""
    CREATE TABLE IF NOT EXISTS exchange_rates (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        title TEXT NOT NULL UNIQUE,
        rate  FLOAT NOT NULL,
        timestamp DATETIME DEFAULT CURRENT_TIMESTAMP
    )""")
    cur.execute("CREATE UNIQUE INDEX IF NOT EXISTS ux_exchange_rates_title ON exchange_rates(title)")

    # –µ—Å–ª–∏ —Ç–∞–∫–∞—è –≤–∞–ª—é—Ç–∞ —É–∂–µ –µ—Å—Ç—å ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º
    cur.execute("""
                INSERT INTO exchange_rates (title, rate)
                VALUES (?, ?) ON CONFLICT(title) DO
                UPDATE SET
                    rate = excluded.rate,
                    timestamp = CURRENT_TIMESTAMP
                """, (title, rate))
    #–¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –∫–æ–Ω–Ω–µ–∫—à–µ–Ω
    con.commit()
    con.close()
def get_cached_rate(title: str) -> tuple[str, float, str] | None:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≤–∞–ª—é—Ç—ã.
    –§–æ—Ä–º–∞—Ç: (title, rate, timestamp) –∏–ª–∏ None, –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö.
    """
    title = str(title).strip().upper()
    con = sqlite3.connect(DB_PATH)
    cur = con.cursor()
    _ensure_schema(cur)  # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏–Ω–¥–µ–∫—Å–∞
    cur.execute("""
        SELECT title, rate, timestamp
        FROM exchange_rates
        WHERE title = ?
        ORDER BY timestamp DESC
        LIMIT 1
    """, (title.upper(),))
    row = cur.fetchone()
    con.close()
    return row

# üß™ –¢–µ—Å—Ç ‚Äî –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∞–π–ª –≤—Ä—É—á–Ω—É—é
if __name__ == "__main__":
    print("üß™ –¢–µ—Å—Ç–æ–≤–∞—è –≤—Å—Ç–∞–≤–∫–∞ –∏ –≤—ã–≤–æ–¥:")

    # –¢–µ—Å—Ç: –¥–æ–±–∞–≤–∏–º –æ–¥–Ω—É –∑–∞–ø–∏—Å—å
    cache_rate("uah", 45929.12)

    # –¢–µ—Å—Ç: –ø—Ä–æ—á–∏—Ç–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏
    con = sqlite3.connect(DB_PATH)
    cur = con.cursor()
    cur.execute("SELECT * FROM exchange_rates")
    results = cur.fetchall()

    print("üì¶ –î–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ:")
    for row in results:
        print(row)

    con.close()